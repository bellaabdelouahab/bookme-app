version: '3.9'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: bookme_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: bookme
      POSTGRES_USER: bookme
      POSTGRES_PASSWORD: bookme
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --locale=en_US.UTF-8'
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bookme -d bookme"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bookme_network

  # Redis for caching and Celery broker
  redis:
    image: redis:7-alpine
    container_name: bookme_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bookme_network

  # Django Application (Development)
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: bookme_web
    restart: unless-stopped
    command: python src/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://bookme:bookme@db:5432/bookme
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - DJANGO_SETTINGS_MODULE=bookme.settings.local
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bookme_network
    stdin_open: true
    tty: true

  # Celery Worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: bookme_celery_worker
    restart: unless-stopped
    command: celery -A bookme worker --loglevel=info --concurrency=4
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://bookme:bookme@db:5432/bookme
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - DJANGO_SETTINGS_MODULE=bookme.settings.local
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bookme_network

  # Celery Beat (Scheduler)
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: bookme_celery_beat
    restart: unless-stopped
    command: celery -A bookme beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://bookme:bookme@db:5432/bookme
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - DJANGO_SETTINGS_MODULE=bookme.settings.local
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bookme_network

  # Flower - Celery monitoring tool
  flower:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: bookme_flower
    restart: unless-stopped
    command: celery -A bookme flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
    depends_on:
      - redis
      - celery_worker
    networks:
      - bookme_network

networks:
  bookme_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
