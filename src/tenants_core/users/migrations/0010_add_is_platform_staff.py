# Generated by Django 5.0.14 on 2025-10-22 11:33

from django.db import migrations, models


def set_platform_staff_for_superusers(apps, schema_editor):
    """Auto-set is_platform_staff=True for all existing superusers."""
    User = apps.get_model('users', 'User')
    updated = User.objects.filter(is_superuser=True).update(is_platform_staff=True)
    print(f"Set is_platform_staff=True for {updated} superuser(s)")


class Migration(migrations.Migration):

    dependencies = [
        ("users", "0009_migrate_legacy_roles_to_tenant_role"),
    ]

    operations = [
        migrations.AddField(
            model_name="user",
            name="is_platform_staff",
            field=models.BooleanField(
                default=False,
                help_text="Can access platform admin to manage tenants. Use Django groups to control specific permissions.",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="is_staff",
            field=models.BooleanField(
                default=False,
                help_text="Required for any admin access (both platform and tenant admin)",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="is_superuser",
            field=models.BooleanField(
                default=False, help_text="Full platform admin access - use sparingly!"
            ),
        ),
        # Auto-set is_platform_staff for existing superusers
        migrations.RunPython(
            set_platform_staff_for_superusers,
            migrations.RunPython.noop
        ),
    ]
